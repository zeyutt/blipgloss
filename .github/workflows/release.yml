name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Install XGO
        run: go install github.com/karalabe/xgo@latest

      - name: Install dependencies
        run: bun install

      - name: Build all platforms
        run: bun run build:verify

      - name: Verify all platform binaries
        run: |
          echo "Checking for required binaries..."
          required_patterns=(
            "*linux-amd64*"
            "*linux-arm64*"
            "*darwin-amd64*"
            "*darwin-arm64*"
            "*windows-amd64*"
            "*windows-arm64*"
          )

          missing_files=()
          for pattern in "${required_patterns[@]}"; do
            if ls release/${pattern} 1> /dev/null 2>&1; then
              echo "✅ Found files matching: $pattern"
              ls release/${pattern}
            else
              echo "❌ Missing files matching: $pattern"
              missing_files+=("$pattern")
            fi
          done

          if [ ${#missing_files[@]} -ne 0 ]; then
            echo "Missing file patterns: ${missing_files[*]}"
            echo "Available files:"
            ls -la release/
            exit 1
          fi

      - name: Setup Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
